// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<AddressForm> should print validation errors inline 1`] = `
<AddressForm
  addAddress={[Function]}
  address={Object {}}
  disabled={false}
  updateAddress={[Function]}
  validateAddress={
    [MockFunction] {
      "calls": Array [
        Array [
          Object {
            "city": "",
            "company": "",
            "country": "DE",
            "firstName": "",
            "lastName": "",
            "middleName": "",
            "phone": "",
            "prefix": "",
            "province": "DE-BW",
            "street1": "",
            "street2": "",
            "suffix": "",
            "tags": Array [],
            "zipCode": "",
          },
        ],
      ],
    }
  }
  validationErrors={Object {}}
>
  <Portal
    name="user.address-form.before"
    props={null}
  />
  <Portal
    name="user.address-form"
    props={null}
  >
    <div
      className="css-6m9p5c"
    >
      <TextField
        className=""
        errorText="foo"
        hintText=""
        label="address.firstName"
        multiLine={false}
        name="firstName"
        onChange={[Function]}
        onFocusChange={[Function]}
        onSanitize={[Function]}
        onValidate={[Function]}
        password={false}
        setRef={[Function]}
        type="text"
        value=""
      >
        <div
          className="css-1vjh8yv "
        >
          <Hint
            hintText=""
            visible={false}
          >
            <div
              className="css-tnfb18 css-1jyyyen"
            >
              <Translate
                className=""
                params={Object {}}
                string=""
              >
                <span
                  className=""
                />
              </Translate>
            </div>
          </Hint>
          <Label
            hasErrorMessage={true}
            isFloating={false}
            isFocused={false}
            label="address.firstName"
            name="firstName"
          >
            <label
              className="css-u7lqu6 css-1fekhao"
              htmlFor="firstName"
            >
              <Translate
                className=""
                params={Object {}}
                string="address.firstName"
              >
                <span
                  className=""
                >
                  address.firstName
                </span>
              </Translate>
            </label>
          </Label>
          <FormElement
            id="firstName"
            multiLine={false}
            name="firstName"
            onChange={[Function]}
            onFocusChange={[Function]}
            onSanitize={[Function]}
            onValidate={[Function]}
            password={false}
            setRef={[Function]}
            type="text"
            value=""
          >
            <Component
              className="css-keangt"
              id="firstName"
              multiLine={false}
              name="firstName"
              onChange={[Function]}
              onFocusChange={[Function]}
              onSanitize={[Function]}
              onValidate={[Function]}
              password={false}
              setRef={[Function]}
              type="text"
              validateOnBlur={true}
              value=""
            >
              <SimpleInput
                autoComplete={false}
                autoCorrect={false}
                className="css-keangt"
                disabled={false}
                id="firstName"
                multiLine={false}
                name="firstName"
                onChange={[Function]}
                onFocusChange={[Function]}
                onSanitize={[Function]}
                onValidate={[Function]}
                password={false}
                setRef={[Function]}
                type="text"
                validateOnBlur={true}
                value=""
              >
                <input
                  autoComplete="off"
                  autoCorrect="off"
                  className="css-keangt"
                  disabled={false}
                  id="firstName"
                  name="firstName"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  type="text"
                  value=""
                />
              </SimpleInput>
            </Component>
          </FormElement>
          <Underline
            hasErrorMessage={true}
            isFocused={false}
          >
            <div
              className="css-ycal4l"
            >
              <div
                className="css-1tpmuef"
                style={
                  Object {
                    "borderBottomColor": "#ff0000",
                  }
                }
              />
            </div>
          </Underline>
          <ErrorText
            className=""
            errorText="foo"
            validationError={null}
          >
            <div
              className=" css-hmgfge"
            >
              <Translate
                className=""
                params={Object {}}
                string="foo"
              >
                <span
                  className=""
                >
                  foo
                </span>
              </Translate>
            </div>
          </ErrorText>
        </div>
      </TextField>
      <TextField
        className=""
        errorText=""
        hintText=""
        label="address.lastName"
        multiLine={false}
        name="lastName"
        onChange={[Function]}
        onFocusChange={[Function]}
        onSanitize={[Function]}
        onValidate={[Function]}
        password={false}
        setRef={[Function]}
        type="text"
        value=""
      >
        <div
          className="css-1vjh8yv "
        >
          <Hint
            hintText=""
            visible={false}
          >
            <div
              className="css-tnfb18 css-1jyyyen"
            >
              <Translate
                className=""
                params={Object {}}
                string=""
              >
                <span
                  className=""
                />
              </Translate>
            </div>
          </Hint>
          <Label
            hasErrorMessage={false}
            isFloating={false}
            isFocused={false}
            label="address.lastName"
            name="lastName"
          >
            <label
              className="css-u7lqu6 css-1fekhao"
              htmlFor="lastName"
            >
              <Translate
                className=""
                params={Object {}}
                string="address.lastName"
              >
                <span
                  className=""
                >
                  address.lastName
                </span>
              </Translate>
            </label>
          </Label>
          <FormElement
            id="lastName"
            multiLine={false}
            name="lastName"
            onChange={[Function]}
            onFocusChange={[Function]}
            onSanitize={[Function]}
            onValidate={[Function]}
            password={false}
            setRef={[Function]}
            type="text"
            value=""
          >
            <Component
              className="css-keangt"
              id="lastName"
              multiLine={false}
              name="lastName"
              onChange={[Function]}
              onFocusChange={[Function]}
              onSanitize={[Function]}
              onValidate={[Function]}
              password={false}
              setRef={[Function]}
              type="text"
              validateOnBlur={true}
              value=""
            >
              <SimpleInput
                autoComplete={false}
                autoCorrect={false}
                className="css-keangt"
                disabled={false}
                id="lastName"
                multiLine={false}
                name="lastName"
                onChange={[Function]}
                onFocusChange={[Function]}
                onSanitize={[Function]}
                onValidate={[Function]}
                password={false}
                setRef={[Function]}
                type="text"
                validateOnBlur={true}
                value=""
              >
                <input
                  autoComplete="off"
                  autoCorrect="off"
                  className="css-keangt"
                  disabled={false}
                  id="lastName"
                  name="lastName"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  type="text"
                  value=""
                />
              </SimpleInput>
            </Component>
          </FormElement>
          <Underline
            hasErrorMessage={false}
            isFocused={false}
          >
            <div
              className="css-ycal4l"
            >
              <div
                className="css-1tpmuef"
                style={
                  Object {
                    "borderBottomColor": undefined,
                    "transform": "scale3d(0,1,1)",
                  }
                }
              />
            </div>
          </Underline>
          <ErrorText
            className=""
            errorText=""
            validationError={null}
          >
            <div
              className=" css-hmgfge"
            >
              <Translate
                className=""
                params={Object {}}
                string=""
              >
                <span
                  className=""
                />
              </Translate>
            </div>
          </ErrorText>
        </div>
      </TextField>
      <TextField
        className=""
        errorText=""
        hintText=""
        label="address.phone"
        multiLine={false}
        name="phone"
        onChange={[Function]}
        onFocusChange={[Function]}
        onSanitize={[Function]}
        onValidate={[Function]}
        password={false}
        setRef={[Function]}
        type="text"
        value=""
      >
        <div
          className="css-1vjh8yv "
        >
          <Hint
            hintText=""
            visible={false}
          >
            <div
              className="css-tnfb18 css-1jyyyen"
            >
              <Translate
                className=""
                params={Object {}}
                string=""
              >
                <span
                  className=""
                />
              </Translate>
            </div>
          </Hint>
          <Label
            hasErrorMessage={false}
            isFloating={false}
            isFocused={false}
            label="address.phone"
            name="phone"
          >
            <label
              className="css-u7lqu6 css-1fekhao"
              htmlFor="phone"
            >
              <Translate
                className=""
                params={Object {}}
                string="address.phone"
              >
                <span
                  className=""
                >
                  address.phone
                </span>
              </Translate>
            </label>
          </Label>
          <FormElement
            id="phone"
            multiLine={false}
            name="phone"
            onChange={[Function]}
            onFocusChange={[Function]}
            onSanitize={[Function]}
            onValidate={[Function]}
            password={false}
            setRef={[Function]}
            type="text"
            value=""
          >
            <Component
              className="css-keangt"
              id="phone"
              multiLine={false}
              name="phone"
              onChange={[Function]}
              onFocusChange={[Function]}
              onSanitize={[Function]}
              onValidate={[Function]}
              password={false}
              setRef={[Function]}
              type="text"
              validateOnBlur={true}
              value=""
            >
              <SimpleInput
                autoComplete={false}
                autoCorrect={false}
                className="css-keangt"
                disabled={false}
                id="phone"
                multiLine={false}
                name="phone"
                onChange={[Function]}
                onFocusChange={[Function]}
                onSanitize={[Function]}
                onValidate={[Function]}
                password={false}
                setRef={[Function]}
                type="text"
                validateOnBlur={true}
                value=""
              >
                <input
                  autoComplete="off"
                  autoCorrect="off"
                  className="css-keangt"
                  disabled={false}
                  id="phone"
                  name="phone"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  type="text"
                  value=""
                />
              </SimpleInput>
            </Component>
          </FormElement>
          <Underline
            hasErrorMessage={false}
            isFocused={false}
          >
            <div
              className="css-ycal4l"
            >
              <div
                className="css-1tpmuef"
                style={
                  Object {
                    "borderBottomColor": undefined,
                    "transform": "scale3d(0,1,1)",
                  }
                }
              />
            </div>
          </Underline>
          <ErrorText
            className=""
            errorText=""
            validationError={null}
          >
            <div
              className=" css-hmgfge"
            >
              <Translate
                className=""
                params={Object {}}
                string=""
              >
                <span
                  className=""
                />
              </Translate>
            </div>
          </ErrorText>
        </div>
      </TextField>
    </div>
    <div
      className="css-1xnhj1e"
    >
      <Checkbox
        className="css-ylsa3p"
        errorText=""
        key="default"
        label="address.makeDefault.default"
        name="default_default"
        onChange={[Function]}
      >
        <FormElement
          className="css-ylsa3p"
          errorText=""
          hasPlaceholder={false}
          hasUnderline={false}
          hasValue={false}
          htmlFor="default_default"
          isFocused={false}
          label=""
          placeholder=""
        >
          <div
            className="css-1vjh8yv css-ylsa3p"
          >
            <Label
              hasErrorMessage={false}
              htmlFor="default_default"
              isFloating={false}
              isFocused={false}
              label=""
            >
              <label
                className="css-u7lqu6 css-1fekhao"
                htmlFor="default_default"
              >
                <Translate
                  className=""
                  params={Object {}}
                  string=""
                >
                  <span
                    className=""
                  />
                </Translate>
              </label>
            </Label>
            <Checkbox
              checkedClassName="css-ylsa3p"
              defaultChecked={true}
              label={
                <Translate
                  className="css-1lte32s"
                  params={Object {}}
                  string="address.makeDefault.default"
                />
              }
              labelPosition="right"
              name="default_default"
              onCheck={[Function]}
              unCheckedClassName="css-ylsa3p"
            >
              <Checkbox
                checkedIcon={
                  <Checked
                    className="css-37nc4w css-ylsa3p"
                  />
                }
                defaultChecked={true}
                label={
                  <Translate
                    className="css-1lte32s"
                    params={Object {}}
                    string="address.makeDefault.default"
                  />
                }
                labelPosition="right"
                name="default_default"
                onCheck={[Function]}
                uncheckedIcon={
                  <Unchecked
                    className="css-37nc4w css-ylsa3p"
                  />
                }
              >
                <div
                  onClick={[Function]}
                >
                  <input
                    name="default_default"
                    type="hidden"
                    value={0}
                  />
                  <Unchecked
                    className="css-37nc4w css-ylsa3p"
                  >
                    <Icon
                      className="css-37nc4w css-ylsa3p"
                      color={null}
                      content="<path d=\\"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\\"/>"
                      size="inherit"
                      viewBox="0 0 24 24"
                    >
                      <svg
                        className="css-yys9hb css-37nc4w css-ylsa3p"
                        dangerouslySetInnerHTML={
                          Object {
                            "__html": "<path d=\\"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\\"/>",
                          }
                        }
                        style={
                          Object {
                            "fill": null,
                            "fontSize": "inherit",
                          }
                        }
                        viewBox="0 0 24 24"
                        xmlns="http://www.w3.org/2000/svg"
                      />
                    </Icon>
                  </Unchecked>
                  <Translate
                    className="css-1lte32s"
                    params={Object {}}
                    string="address.makeDefault.default"
                  >
                    <span
                      className="css-1lte32s"
                    >
                      address.makeDefault.default
                    </span>
                  </Translate>
                </div>
              </Checkbox>
            </Checkbox>
            <ErrorText
              className={null}
              errorText=""
            >
              <div
                className=""
              >
                <Translate
                  className=""
                  params={Object {}}
                  string=""
                >
                  <span
                    className=""
                  />
                </Translate>
              </div>
            </ErrorText>
          </div>
        </FormElement>
      </Checkbox>
      <Portal
        name="user.address-form.button.before"
        props={null}
      />
      <Portal
        name="user.address-form.button"
        props={null}
      >
        <RippleButton
          className="css-1dwy2jc"
          data-test-id="AddAddressButton"
          disabled={false}
          flat={false}
          onClick={[Function]}
          rippleClassName=""
          rippleSize={null}
          testId="Button"
          type="secondary"
          wrapContent={true}
        >
          <Button
            className="css-1dwy2jc"
            disabled={false}
            flat={false}
            onClick={[Function]}
            testId="Button"
            type="secondary"
            wrapContent={false}
          >
            <Button
              className="css-187rja2 css-1dwy2jc"
              disabled={false}
              onClick={[Function]}
              testId="Button"
            >
              <button
                className="css-187rja2 css-1dwy2jc css-1rn65c0"
                data-test-id="Button"
                disabled={false}
                onClick={[Function]}
              >
                <Ripple
                  className="css-8s1fw2 "
                  color="#000"
                  disabled={false}
                  fill={true}
                  onComplete={[Function]}
                  overflow={false}
                  size={null}
                >
                  <div
                    aria-hidden={true}
                    className="css-8s1fw2 "
                    data-test-id="Ripple"
                    onClick={[Function]}
                    style={
                      Object {
                        "overflow": "hidden",
                        "position": "relative",
                      }
                    }
                  >
                    <Translate
                      className=""
                      params={Object {}}
                      string="address.add.button"
                    >
                      <span
                        className=""
                      >
                        address.add.button
                      </span>
                    </Translate>
                  </div>
                </Ripple>
              </button>
            </Button>
          </Button>
        </RippleButton>
      </Portal>
      <Portal
        name="user.address-form.button.after"
        props={null}
      />
    </div>
  </Portal>
  <Portal
    name="user.address-form.after"
    props={null}
  />
</AddressForm>
`;

exports[`<AddressForm> should render only configured address fields 1`] = `
<AddressForm
  addAddress={[Function]}
  address={Object {}}
  disabled={false}
  updateAddress={[Function]}
  validateAddress={[Function]}
  validationErrors={Object {}}
>
  <Portal
    name="user.address-form.before"
    props={null}
  />
  <Portal
    name="user.address-form"
    props={null}
  >
    <div
      className="css-6m9p5c"
    >
      <TextField
        className=""
        errorText=""
        hintText=""
        label="address.firstName"
        multiLine={false}
        name="firstName"
        onChange={[Function]}
        onFocusChange={[Function]}
        onSanitize={[Function]}
        onValidate={[Function]}
        password={false}
        setRef={[Function]}
        type="text"
        value=""
      >
        <div
          className="css-1vjh8yv "
        >
          <Hint
            hintText=""
            visible={false}
          >
            <div
              className="css-tnfb18 css-1jyyyen"
            >
              <Translate
                className=""
                params={Object {}}
                string=""
              >
                <span
                  className=""
                />
              </Translate>
            </div>
          </Hint>
          <Label
            hasErrorMessage={false}
            isFloating={false}
            isFocused={false}
            label="address.firstName"
            name="firstName"
          >
            <label
              className="css-u7lqu6 css-1fekhao"
              htmlFor="firstName"
            >
              <Translate
                className=""
                params={Object {}}
                string="address.firstName"
              >
                <span
                  className=""
                >
                  address.firstName
                </span>
              </Translate>
            </label>
          </Label>
          <FormElement
            id="firstName"
            multiLine={false}
            name="firstName"
            onChange={[Function]}
            onFocusChange={[Function]}
            onSanitize={[Function]}
            onValidate={[Function]}
            password={false}
            setRef={[Function]}
            type="text"
            value=""
          >
            <Component
              className="css-keangt"
              id="firstName"
              multiLine={false}
              name="firstName"
              onChange={[Function]}
              onFocusChange={[Function]}
              onSanitize={[Function]}
              onValidate={[Function]}
              password={false}
              setRef={[Function]}
              type="text"
              validateOnBlur={true}
              value=""
            >
              <SimpleInput
                autoComplete={false}
                autoCorrect={false}
                className="css-keangt"
                disabled={false}
                id="firstName"
                multiLine={false}
                name="firstName"
                onChange={[Function]}
                onFocusChange={[Function]}
                onSanitize={[Function]}
                onValidate={[Function]}
                password={false}
                setRef={[Function]}
                type="text"
                validateOnBlur={true}
                value=""
              >
                <input
                  autoComplete="off"
                  autoCorrect="off"
                  className="css-keangt"
                  disabled={false}
                  id="firstName"
                  name="firstName"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  type="text"
                  value=""
                />
              </SimpleInput>
            </Component>
          </FormElement>
          <Underline
            hasErrorMessage={false}
            isFocused={false}
          >
            <div
              className="css-ycal4l"
            >
              <div
                className="css-1tpmuef"
                style={
                  Object {
                    "borderBottomColor": undefined,
                    "transform": "scale3d(0,1,1)",
                  }
                }
              />
            </div>
          </Underline>
          <ErrorText
            className=""
            errorText=""
            validationError={null}
          >
            <div
              className=" css-hmgfge"
            >
              <Translate
                className=""
                params={Object {}}
                string=""
              >
                <span
                  className=""
                />
              </Translate>
            </div>
          </ErrorText>
        </div>
      </TextField>
      <TextField
        className=""
        errorText=""
        hintText=""
        label="address.lastName"
        multiLine={false}
        name="lastName"
        onChange={[Function]}
        onFocusChange={[Function]}
        onSanitize={[Function]}
        onValidate={[Function]}
        password={false}
        setRef={[Function]}
        type="text"
        value=""
      >
        <div
          className="css-1vjh8yv "
        >
          <Hint
            hintText=""
            visible={false}
          >
            <div
              className="css-tnfb18 css-1jyyyen"
            >
              <Translate
                className=""
                params={Object {}}
                string=""
              >
                <span
                  className=""
                />
              </Translate>
            </div>
          </Hint>
          <Label
            hasErrorMessage={false}
            isFloating={false}
            isFocused={false}
            label="address.lastName"
            name="lastName"
          >
            <label
              className="css-u7lqu6 css-1fekhao"
              htmlFor="lastName"
            >
              <Translate
                className=""
                params={Object {}}
                string="address.lastName"
              >
                <span
                  className=""
                >
                  address.lastName
                </span>
              </Translate>
            </label>
          </Label>
          <FormElement
            id="lastName"
            multiLine={false}
            name="lastName"
            onChange={[Function]}
            onFocusChange={[Function]}
            onSanitize={[Function]}
            onValidate={[Function]}
            password={false}
            setRef={[Function]}
            type="text"
            value=""
          >
            <Component
              className="css-keangt"
              id="lastName"
              multiLine={false}
              name="lastName"
              onChange={[Function]}
              onFocusChange={[Function]}
              onSanitize={[Function]}
              onValidate={[Function]}
              password={false}
              setRef={[Function]}
              type="text"
              validateOnBlur={true}
              value=""
            >
              <SimpleInput
                autoComplete={false}
                autoCorrect={false}
                className="css-keangt"
                disabled={false}
                id="lastName"
                multiLine={false}
                name="lastName"
                onChange={[Function]}
                onFocusChange={[Function]}
                onSanitize={[Function]}
                onValidate={[Function]}
                password={false}
                setRef={[Function]}
                type="text"
                validateOnBlur={true}
                value=""
              >
                <input
                  autoComplete="off"
                  autoCorrect="off"
                  className="css-keangt"
                  disabled={false}
                  id="lastName"
                  name="lastName"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  type="text"
                  value=""
                />
              </SimpleInput>
            </Component>
          </FormElement>
          <Underline
            hasErrorMessage={false}
            isFocused={false}
          >
            <div
              className="css-ycal4l"
            >
              <div
                className="css-1tpmuef"
                style={
                  Object {
                    "borderBottomColor": undefined,
                    "transform": "scale3d(0,1,1)",
                  }
                }
              />
            </div>
          </Underline>
          <ErrorText
            className=""
            errorText=""
            validationError={null}
          >
            <div
              className=" css-hmgfge"
            >
              <Translate
                className=""
                params={Object {}}
                string=""
              >
                <span
                  className=""
                />
              </Translate>
            </div>
          </ErrorText>
        </div>
      </TextField>
      <TextField
        className=""
        errorText=""
        hintText=""
        label="address.phone"
        multiLine={false}
        name="phone"
        onChange={[Function]}
        onFocusChange={[Function]}
        onSanitize={[Function]}
        onValidate={[Function]}
        password={false}
        setRef={[Function]}
        type="text"
        value=""
      >
        <div
          className="css-1vjh8yv "
        >
          <Hint
            hintText=""
            visible={false}
          >
            <div
              className="css-tnfb18 css-1jyyyen"
            >
              <Translate
                className=""
                params={Object {}}
                string=""
              >
                <span
                  className=""
                />
              </Translate>
            </div>
          </Hint>
          <Label
            hasErrorMessage={false}
            isFloating={false}
            isFocused={false}
            label="address.phone"
            name="phone"
          >
            <label
              className="css-u7lqu6 css-1fekhao"
              htmlFor="phone"
            >
              <Translate
                className=""
                params={Object {}}
                string="address.phone"
              >
                <span
                  className=""
                >
                  address.phone
                </span>
              </Translate>
            </label>
          </Label>
          <FormElement
            id="phone"
            multiLine={false}
            name="phone"
            onChange={[Function]}
            onFocusChange={[Function]}
            onSanitize={[Function]}
            onValidate={[Function]}
            password={false}
            setRef={[Function]}
            type="text"
            value=""
          >
            <Component
              className="css-keangt"
              id="phone"
              multiLine={false}
              name="phone"
              onChange={[Function]}
              onFocusChange={[Function]}
              onSanitize={[Function]}
              onValidate={[Function]}
              password={false}
              setRef={[Function]}
              type="text"
              validateOnBlur={true}
              value=""
            >
              <SimpleInput
                autoComplete={false}
                autoCorrect={false}
                className="css-keangt"
                disabled={false}
                id="phone"
                multiLine={false}
                name="phone"
                onChange={[Function]}
                onFocusChange={[Function]}
                onSanitize={[Function]}
                onValidate={[Function]}
                password={false}
                setRef={[Function]}
                type="text"
                validateOnBlur={true}
                value=""
              >
                <input
                  autoComplete="off"
                  autoCorrect="off"
                  className="css-keangt"
                  disabled={false}
                  id="phone"
                  name="phone"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  type="text"
                  value=""
                />
              </SimpleInput>
            </Component>
          </FormElement>
          <Underline
            hasErrorMessage={false}
            isFocused={false}
          >
            <div
              className="css-ycal4l"
            >
              <div
                className="css-1tpmuef"
                style={
                  Object {
                    "borderBottomColor": undefined,
                    "transform": "scale3d(0,1,1)",
                  }
                }
              />
            </div>
          </Underline>
          <ErrorText
            className=""
            errorText=""
            validationError={null}
          >
            <div
              className=" css-hmgfge"
            >
              <Translate
                className=""
                params={Object {}}
                string=""
              >
                <span
                  className=""
                />
              </Translate>
            </div>
          </ErrorText>
        </div>
      </TextField>
    </div>
    <div
      className="css-1xnhj1e"
    >
      <Checkbox
        className="css-ylsa3p"
        errorText=""
        key="default"
        label="address.makeDefault.default"
        name="default_default"
        onChange={[Function]}
      >
        <FormElement
          className="css-ylsa3p"
          errorText=""
          hasPlaceholder={false}
          hasUnderline={false}
          hasValue={false}
          htmlFor="default_default"
          isFocused={false}
          label=""
          placeholder=""
        >
          <div
            className="css-1vjh8yv css-ylsa3p"
          >
            <Label
              hasErrorMessage={false}
              htmlFor="default_default"
              isFloating={false}
              isFocused={false}
              label=""
            >
              <label
                className="css-u7lqu6 css-1fekhao"
                htmlFor="default_default"
              >
                <Translate
                  className=""
                  params={Object {}}
                  string=""
                >
                  <span
                    className=""
                  />
                </Translate>
              </label>
            </Label>
            <Checkbox
              checkedClassName="css-ylsa3p"
              defaultChecked={true}
              label={
                <Translate
                  className="css-1lte32s"
                  params={Object {}}
                  string="address.makeDefault.default"
                />
              }
              labelPosition="right"
              name="default_default"
              onCheck={[Function]}
              unCheckedClassName="css-ylsa3p"
            >
              <Checkbox
                checkedIcon={
                  <Checked
                    className="css-37nc4w css-ylsa3p"
                  />
                }
                defaultChecked={true}
                label={
                  <Translate
                    className="css-1lte32s"
                    params={Object {}}
                    string="address.makeDefault.default"
                  />
                }
                labelPosition="right"
                name="default_default"
                onCheck={[Function]}
                uncheckedIcon={
                  <Unchecked
                    className="css-37nc4w css-ylsa3p"
                  />
                }
              >
                <div
                  onClick={[Function]}
                >
                  <input
                    name="default_default"
                    type="hidden"
                    value={0}
                  />
                  <Unchecked
                    className="css-37nc4w css-ylsa3p"
                  >
                    <Icon
                      className="css-37nc4w css-ylsa3p"
                      color={null}
                      content="<path d=\\"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\\"/>"
                      size="inherit"
                      viewBox="0 0 24 24"
                    >
                      <svg
                        className="css-yys9hb css-37nc4w css-ylsa3p"
                        dangerouslySetInnerHTML={
                          Object {
                            "__html": "<path d=\\"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\\"/>",
                          }
                        }
                        style={
                          Object {
                            "fill": null,
                            "fontSize": "inherit",
                          }
                        }
                        viewBox="0 0 24 24"
                        xmlns="http://www.w3.org/2000/svg"
                      />
                    </Icon>
                  </Unchecked>
                  <Translate
                    className="css-1lte32s"
                    params={Object {}}
                    string="address.makeDefault.default"
                  >
                    <span
                      className="css-1lte32s"
                    >
                      address.makeDefault.default
                    </span>
                  </Translate>
                </div>
              </Checkbox>
            </Checkbox>
            <ErrorText
              className={null}
              errorText=""
            >
              <div
                className=""
              >
                <Translate
                  className=""
                  params={Object {}}
                  string=""
                >
                  <span
                    className=""
                  />
                </Translate>
              </div>
            </ErrorText>
          </div>
        </FormElement>
      </Checkbox>
      <Portal
        name="user.address-form.button.before"
        props={null}
      />
      <Portal
        name="user.address-form.button"
        props={null}
      >
        <RippleButton
          className="css-1dwy2jc"
          data-test-id="AddAddressButton"
          disabled={false}
          flat={false}
          onClick={[Function]}
          rippleClassName=""
          rippleSize={null}
          testId="Button"
          type="secondary"
          wrapContent={true}
        >
          <Button
            className="css-1dwy2jc"
            disabled={false}
            flat={false}
            onClick={[Function]}
            testId="Button"
            type="secondary"
            wrapContent={false}
          >
            <Button
              className="css-187rja2 css-1dwy2jc"
              disabled={false}
              onClick={[Function]}
              testId="Button"
            >
              <button
                className="css-187rja2 css-1dwy2jc css-1rn65c0"
                data-test-id="Button"
                disabled={false}
                onClick={[Function]}
              >
                <Ripple
                  className="css-8s1fw2 "
                  color="#000"
                  disabled={false}
                  fill={true}
                  onComplete={[Function]}
                  overflow={false}
                  size={null}
                >
                  <div
                    aria-hidden={true}
                    className="css-8s1fw2 "
                    data-test-id="Ripple"
                    onClick={[Function]}
                    style={
                      Object {
                        "overflow": "hidden",
                        "position": "relative",
                      }
                    }
                  >
                    <Translate
                      className=""
                      params={Object {}}
                      string="address.add.button"
                    >
                      <span
                        className=""
                      >
                        address.add.button
                      </span>
                    </Translate>
                  </div>
                </Ripple>
              </button>
            </Button>
          </Button>
        </RippleButton>
      </Portal>
      <Portal
        name="user.address-form.button.after"
        props={null}
      />
    </div>
  </Portal>
  <Portal
    name="user.address-form.after"
    props={null}
  />
</AddressForm>
`;
