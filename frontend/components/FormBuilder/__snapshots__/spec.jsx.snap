// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<FormBuilder /> should not render invisible field 1`] = `
<FormBuilder
  className=""
  config={
    Object {
      "fields": Object {
        "firstName": Object {
          "label": "foo",
          "type": "text",
          "visible": false,
        },
      },
    }
  }
  defaults={Object {}}
  handleUpdate={[Function]}
  id="foo"
>
  <div
    className=""
  >
    <Portal
      name="nav-menu.foo.firstName.before"
      props={null}
    />
    <Portal
      name="nav-menu.foo.firstName"
      props={null}
    >
      <TextElement
        element={
          Object {
            "custom": false,
            "handleChange": [Function],
            "id": "firstName",
            "label": "foo",
            "type": "text",
            "visible": false,
          }
        }
        errorText=""
        name="foo.firstName"
        style={
          Object {
            "field": "",
          }
        }
        value=""
        visible={false}
      />
      <SelectElement
        element={
          Object {
            "custom": false,
            "handleChange": [Function],
            "id": "firstName",
            "label": "foo",
            "type": "text",
            "visible": false,
          }
        }
        errorText=""
        name="foo.firstName"
        style={
          Object {
            "fields": "",
          }
        }
        value=""
        visible={false}
      />
      <CountryElement
        countryList={
          Object {
            "AT": "Austria",
            "DE": "Germany",
            "FR": "France",
            "GB": "United Kingdom",
            "US": "United States",
          }
        }
        element={
          Object {
            "custom": false,
            "handleChange": [Function],
            "id": "firstName",
            "label": "foo",
            "type": "text",
            "visible": false,
          }
        }
        errorText=""
        name="foo.firstName"
        style={
          Object {
            "fields": "",
          }
        }
        value=""
        visible={false}
      />
      <ProvinceElement
        element={
          Object {
            "custom": false,
            "handleChange": [Function],
            "id": "firstName",
            "label": "foo",
            "type": "text",
            "visible": false,
          }
        }
        errorText=""
        name="foo.firstName"
        provincesList={Object {}}
        style={
          Object {
            "fields": "",
          }
        }
        value=""
        visible={false}
      />
      <RadioElement
        element={
          Object {
            "custom": false,
            "handleChange": [Function],
            "id": "firstName",
            "label": "foo",
            "type": "text",
            "visible": false,
          }
        }
        errorText=""
        name="foo.firstName"
        style={
          Object {
            "fields": "",
          }
        }
        value=""
        visible={false}
      />
      <CheckboxElement
        element={
          Object {
            "custom": false,
            "handleChange": [Function],
            "id": "firstName",
            "label": "foo",
            "type": "text",
            "visible": false,
          }
        }
        errorText=""
        name="foo.firstName"
        style={
          Object {
            "fields": "",
          }
        }
        value={false}
        visible={false}
      />
    </Portal>
    <Portal
      name="nav-menu.foo.firstName.after"
      props={null}
    />
  </div>
</FormBuilder>
`;

exports[`<FormBuilder /> should render empty form 1`] = `
<FormBuilder
  className=""
  config={
    Object {
      "fields": Object {},
    }
  }
  defaults={Object {}}
  handleUpdate={[Function]}
  id="foo"
>
  <div
    className=""
  />
</FormBuilder>
`;

exports[`<FormBuilder /> should render two text fields 1`] = `
<FormBuilder
  className=""
  config={
    Object {
      "fields": Object {
        "firstName": Object {
          "label": "foo",
          "type": "text",
          "visible": true,
        },
        "lastName": Object {
          "label": "bar",
          "type": "text",
          "visible": true,
        },
      },
    }
  }
  defaults={Object {}}
  handleUpdate={[Function]}
  id="foo"
>
  <div
    className=""
  >
    <Portal
      name="nav-menu.foo.firstName.before"
      props={null}
    />
    <Portal
      name="nav-menu.foo.firstName"
      props={null}
    >
      <TextElement
        element={
          Object {
            "custom": false,
            "handleChange": [Function],
            "id": "firstName",
            "label": "foo",
            "type": "text",
            "visible": true,
          }
        }
        errorText=""
        name="foo.firstName"
        style={
          Object {
            "field": "",
          }
        }
        value={null}
        visible={true}
      >
        <TextField
          className=""
          errorText=""
          hintText=""
          label="foo"
          multiLine={false}
          name="foo.firstName"
          onChange={[Function]}
          onFocusChange={[Function]}
          onSanitize={[Function]}
          onValidate={[Function]}
          password={false}
          setRef={[Function]}
          type="text"
          value={null}
        >
          <div
            className="css-n6iwau "
          >
            <Hint
              hintText=""
              visible={false}
            >
              <div
                className="css-tnfb18 css-1jyyyen"
              >
                <Translate
                  className=""
                  params={Object {}}
                  string=""
                >
                  <span
                    className=""
                  />
                </Translate>
              </div>
            </Hint>
            <Label
              hasErrorMessage={false}
              isFloating={false}
              isFocused={false}
              label="foo"
              name="foo.firstName"
            >
              <label
                className="css-u7lqu6 css-1fekhao"
                htmlFor="foo.firstName"
              >
                <Translate
                  className=""
                  params={Object {}}
                  string="foo"
                >
                  <span
                    className=""
                  >
                    foo
                  </span>
                </Translate>
              </label>
            </Label>
            <FormElement
              id="foo.firstName"
              multiLine={false}
              name="foo.firstName"
              onChange={[Function]}
              onFocusChange={[Function]}
              onSanitize={[Function]}
              onValidate={[Function]}
              password={false}
              setRef={[Function]}
              type="text"
              value={null}
            >
              <Component
                className="css-keangt"
                id="foo.firstName"
                multiLine={false}
                name="foo.firstName"
                onChange={[Function]}
                onFocusChange={[Function]}
                onSanitize={[Function]}
                onValidate={[Function]}
                password={false}
                setRef={[Function]}
                type="text"
                validateOnBlur={true}
                value={null}
              >
                <SimpleInput
                  autoComplete={false}
                  autoCorrect={false}
                  className="css-keangt"
                  disabled={false}
                  id="foo.firstName"
                  multiLine={false}
                  name="foo.firstName"
                  onChange={[Function]}
                  onFocusChange={[Function]}
                  onSanitize={[Function]}
                  onValidate={[Function]}
                  password={false}
                  setRef={[Function]}
                  type="text"
                  validateOnBlur={true}
                  value={null}
                >
                  <input
                    autoComplete="off"
                    autoCorrect="off"
                    className="css-keangt"
                    disabled={false}
                    id="foo.firstName"
                    name="foo.firstName"
                    onBlur={[Function]}
                    onChange={[Function]}
                    onFocus={[Function]}
                    type="text"
                    value=""
                  />
                </SimpleInput>
              </Component>
            </FormElement>
            <Underline
              hasErrorMessage={false}
              isFocused={false}
            >
              <div
                className="css-ycal4l"
              >
                <div
                  className="css-1tpmuef"
                  style={
                    Object {
                      "borderBottomColor": undefined,
                      "transform": "scale3d(0,1,1)",
                    }
                  }
                />
              </div>
            </Underline>
            <ErrorText
              className=""
              errorText=""
              validationError={null}
            >
              <div
                className=" css-hmgfge"
              >
                <Translate
                  className=""
                  params={Object {}}
                  string=""
                >
                  <span
                    className=""
                  />
                </Translate>
              </div>
            </ErrorText>
          </div>
        </TextField>
      </TextElement>
      <SelectElement
        element={
          Object {
            "custom": false,
            "handleChange": [Function],
            "id": "firstName",
            "label": "foo",
            "type": "text",
            "visible": true,
          }
        }
        errorText=""
        name="foo.firstName"
        style={
          Object {
            "fields": "",
          }
        }
        value={null}
        visible={true}
      />
      <CountryElement
        countryList={
          Object {
            "AT": "Austria",
            "DE": "Germany",
            "FR": "France",
            "GB": "United Kingdom",
            "US": "United States",
          }
        }
        element={
          Object {
            "custom": false,
            "handleChange": [Function],
            "id": "firstName",
            "label": "foo",
            "type": "text",
            "visible": true,
          }
        }
        errorText=""
        name="foo.firstName"
        style={
          Object {
            "fields": "",
          }
        }
        value={null}
        visible={true}
      />
      <ProvinceElement
        element={
          Object {
            "custom": false,
            "handleChange": [Function],
            "id": "firstName",
            "label": "foo",
            "type": "text",
            "visible": true,
          }
        }
        errorText=""
        name="foo.firstName"
        provincesList={Object {}}
        style={
          Object {
            "fields": "",
          }
        }
        value={null}
        visible={true}
      />
      <RadioElement
        element={
          Object {
            "custom": false,
            "handleChange": [Function],
            "id": "firstName",
            "label": "foo",
            "type": "text",
            "visible": true,
          }
        }
        errorText=""
        name="foo.firstName"
        style={
          Object {
            "fields": "",
          }
        }
        value={null}
        visible={true}
      />
      <CheckboxElement
        element={
          Object {
            "custom": false,
            "handleChange": [Function],
            "id": "firstName",
            "label": "foo",
            "type": "text",
            "visible": true,
          }
        }
        errorText=""
        name="foo.firstName"
        style={
          Object {
            "fields": "",
          }
        }
        value={null}
        visible={true}
      />
    </Portal>
    <Portal
      name="nav-menu.foo.firstName.after"
      props={null}
    />
    <Portal
      name="nav-menu.foo.lastName.before"
      props={null}
    />
    <Portal
      name="nav-menu.foo.lastName"
      props={null}
    >
      <TextElement
        element={
          Object {
            "custom": false,
            "handleChange": [Function],
            "id": "lastName",
            "label": "bar",
            "type": "text",
            "visible": true,
          }
        }
        errorText=""
        name="foo.lastName"
        style={
          Object {
            "field": "",
          }
        }
        value=""
        visible={true}
      >
        <TextField
          className=""
          errorText=""
          hintText=""
          label="bar"
          multiLine={false}
          name="foo.lastName"
          onChange={[Function]}
          onFocusChange={[Function]}
          onSanitize={[Function]}
          onValidate={[Function]}
          password={false}
          setRef={[Function]}
          type="text"
          value=""
        >
          <div
            className="css-n6iwau "
          >
            <Hint
              hintText=""
              visible={false}
            >
              <div
                className="css-tnfb18 css-1jyyyen"
              >
                <Translate
                  className=""
                  params={Object {}}
                  string=""
                >
                  <span
                    className=""
                  />
                </Translate>
              </div>
            </Hint>
            <Label
              hasErrorMessage={false}
              isFloating={false}
              isFocused={false}
              label="bar"
              name="foo.lastName"
            >
              <label
                className="css-u7lqu6 css-1fekhao"
                htmlFor="foo.lastName"
              >
                <Translate
                  className=""
                  params={Object {}}
                  string="bar"
                >
                  <span
                    className=""
                  >
                    bar
                  </span>
                </Translate>
              </label>
            </Label>
            <FormElement
              id="foo.lastName"
              multiLine={false}
              name="foo.lastName"
              onChange={[Function]}
              onFocusChange={[Function]}
              onSanitize={[Function]}
              onValidate={[Function]}
              password={false}
              setRef={[Function]}
              type="text"
              value=""
            >
              <Component
                className="css-keangt"
                id="foo.lastName"
                multiLine={false}
                name="foo.lastName"
                onChange={[Function]}
                onFocusChange={[Function]}
                onSanitize={[Function]}
                onValidate={[Function]}
                password={false}
                setRef={[Function]}
                type="text"
                validateOnBlur={true}
                value=""
              >
                <SimpleInput
                  autoComplete={false}
                  autoCorrect={false}
                  className="css-keangt"
                  disabled={false}
                  id="foo.lastName"
                  multiLine={false}
                  name="foo.lastName"
                  onChange={[Function]}
                  onFocusChange={[Function]}
                  onSanitize={[Function]}
                  onValidate={[Function]}
                  password={false}
                  setRef={[Function]}
                  type="text"
                  validateOnBlur={true}
                  value=""
                >
                  <input
                    autoComplete="off"
                    autoCorrect="off"
                    className="css-keangt"
                    disabled={false}
                    id="foo.lastName"
                    name="foo.lastName"
                    onBlur={[Function]}
                    onChange={[Function]}
                    onFocus={[Function]}
                    type="text"
                    value=""
                  />
                </SimpleInput>
              </Component>
            </FormElement>
            <Underline
              hasErrorMessage={false}
              isFocused={false}
            >
              <div
                className="css-ycal4l"
              >
                <div
                  className="css-1tpmuef"
                  style={
                    Object {
                      "borderBottomColor": undefined,
                      "transform": "scale3d(0,1,1)",
                    }
                  }
                />
              </div>
            </Underline>
            <ErrorText
              className=""
              errorText=""
              validationError={null}
            >
              <div
                className=" css-hmgfge"
              >
                <Translate
                  className=""
                  params={Object {}}
                  string=""
                >
                  <span
                    className=""
                  />
                </Translate>
              </div>
            </ErrorText>
          </div>
        </TextField>
      </TextElement>
      <SelectElement
        element={
          Object {
            "custom": false,
            "handleChange": [Function],
            "id": "lastName",
            "label": "bar",
            "type": "text",
            "visible": true,
          }
        }
        errorText=""
        name="foo.lastName"
        style={
          Object {
            "fields": "",
          }
        }
        value=""
        visible={true}
      />
      <CountryElement
        countryList={
          Object {
            "AT": "Austria",
            "DE": "Germany",
            "FR": "France",
            "GB": "United Kingdom",
            "US": "United States",
          }
        }
        element={
          Object {
            "custom": false,
            "handleChange": [Function],
            "id": "lastName",
            "label": "bar",
            "type": "text",
            "visible": true,
          }
        }
        errorText=""
        name="foo.lastName"
        style={
          Object {
            "fields": "",
          }
        }
        value=""
        visible={true}
      />
      <ProvinceElement
        element={
          Object {
            "custom": false,
            "handleChange": [Function],
            "id": "lastName",
            "label": "bar",
            "type": "text",
            "visible": true,
          }
        }
        errorText=""
        name="foo.lastName"
        provincesList={Object {}}
        style={
          Object {
            "fields": "",
          }
        }
        value=""
        visible={true}
      />
      <RadioElement
        element={
          Object {
            "custom": false,
            "handleChange": [Function],
            "id": "lastName",
            "label": "bar",
            "type": "text",
            "visible": true,
          }
        }
        errorText=""
        name="foo.lastName"
        style={
          Object {
            "fields": "",
          }
        }
        value=""
        visible={true}
      />
      <CheckboxElement
        element={
          Object {
            "custom": false,
            "handleChange": [Function],
            "id": "lastName",
            "label": "bar",
            "type": "text",
            "visible": true,
          }
        }
        errorText=""
        name="foo.lastName"
        style={
          Object {
            "fields": "",
          }
        }
        value=""
        visible={true}
      />
    </Portal>
    <Portal
      name="nav-menu.foo.lastName.after"
      props={null}
    />
  </div>
</FormBuilder>
`;
