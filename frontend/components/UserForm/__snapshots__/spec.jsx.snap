// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<UserForm> should render user profile form 1`] = `
<UserForm
  disabled={false}
  isRegister={false}
  registerUser={[Function]}
  updateUser={[Function]}
  user={
    Object {
      "firstName": "John",
      "lastName": "Doe",
    }
  }
  validateUser={[Function]}
  validationErrors={Object {}}
>
  <Portal
    name="user.form.before"
    props={null}
  />
  <Portal
    name="user.form"
    props={null}
  >
    <TextField
      className=""
      errorText=""
      hintText=""
      isControlled={false}
      label="user.firstName"
      multiLine={false}
      name="firstName"
      onChange={[Function]}
      onFocusChange={[Function]}
      onSanitize={[Function]}
      onValidate={[Function]}
      password={false}
      setRef={[Function]}
      translateErrorText={true}
      type="text"
      value="John"
    >
      <div
        className="css-e4z0u6 "
      >
        <Hint
          hintText=""
          visible={false}
        >
          <div
            className="css-tnfb18 css-1jyyyen"
          >
            <Translate
              className=""
              params={Object {}}
              string=""
            >
              <span
                className=""
              />
            </Translate>
          </div>
        </Hint>
        <Label
          hasErrorMessage={false}
          isFloating={true}
          isFocused={false}
          label="user.firstName"
          name="firstName"
        >
          <label
            className="css-u7lqu6 css-16msjt6 css-1fekhao"
            htmlFor="firstName"
          >
            <Translate
              className=""
              params={Object {}}
              string="user.firstName"
            >
              <span
                className=""
              >
                user.firstName
              </span>
            </Translate>
          </label>
        </Label>
        <FormElement
          id="firstName"
          isControlled={false}
          multiLine={false}
          name="firstName"
          onChange={[Function]}
          onFocusChange={[Function]}
          onSanitize={[Function]}
          onValidate={[Function]}
          password={false}
          setRef={[Function]}
          type="text"
          value="John"
        >
          <Component
            className="css-keangt"
            id="firstName"
            isControlled={false}
            multiLine={false}
            name="firstName"
            onChange={[Function]}
            onFocusChange={[Function]}
            onSanitize={[Function]}
            onValidate={[Function]}
            password={false}
            setRef={[Function]}
            type="text"
            validateOnBlur={true}
            value="John"
          >
            <SimpleInput
              autoComplete={false}
              autoCorrect={false}
              className="css-keangt"
              disabled={false}
              id="firstName"
              isControlled={false}
              multiLine={false}
              name="firstName"
              onChange={[Function]}
              onFocusChange={[Function]}
              onSanitize={[Function]}
              onValidate={[Function]}
              password={false}
              setRef={[Function]}
              type="text"
              validateOnBlur={true}
              value="John"
            >
              <input
                autoComplete="off"
                autoCorrect="off"
                className="css-keangt"
                disabled={false}
                id="firstName"
                name="firstName"
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                type="text"
                value="John"
              />
            </SimpleInput>
          </Component>
        </FormElement>
        <Underline
          hasErrorMessage={false}
          isFocused={false}
        >
          <div
            className="css-ycal4l"
          >
            <div
              className="css-1tpmuef"
              style={
                Object {
                  "borderBottomColor": undefined,
                  "transform": "scale3d(0,1,1)",
                }
              }
            />
          </div>
        </Underline>
        <ErrorText
          className=""
          errorText=""
          translate={true}
          validationError={null}
        >
          <div
            className=" css-hmgfge"
          >
            <Translate
              className=""
              params={Object {}}
              string=""
            >
              <span
                className=""
              />
            </Translate>
          </div>
        </ErrorText>
      </div>
    </TextField>
    <TextField
      className=""
      errorText=""
      hintText=""
      isControlled={false}
      label="user.lastName"
      multiLine={false}
      name="lastName"
      onChange={[Function]}
      onFocusChange={[Function]}
      onSanitize={[Function]}
      onValidate={[Function]}
      password={false}
      setRef={[Function]}
      translateErrorText={true}
      type="text"
      value="Doe"
    >
      <div
        className="css-e4z0u6 "
      >
        <Hint
          hintText=""
          visible={false}
        >
          <div
            className="css-tnfb18 css-1jyyyen"
          >
            <Translate
              className=""
              params={Object {}}
              string=""
            >
              <span
                className=""
              />
            </Translate>
          </div>
        </Hint>
        <Label
          hasErrorMessage={false}
          isFloating={true}
          isFocused={false}
          label="user.lastName"
          name="lastName"
        >
          <label
            className="css-u7lqu6 css-16msjt6 css-1fekhao"
            htmlFor="lastName"
          >
            <Translate
              className=""
              params={Object {}}
              string="user.lastName"
            >
              <span
                className=""
              >
                user.lastName
              </span>
            </Translate>
          </label>
        </Label>
        <FormElement
          id="lastName"
          isControlled={false}
          multiLine={false}
          name="lastName"
          onChange={[Function]}
          onFocusChange={[Function]}
          onSanitize={[Function]}
          onValidate={[Function]}
          password={false}
          setRef={[Function]}
          type="text"
          value="Doe"
        >
          <Component
            className="css-keangt"
            id="lastName"
            isControlled={false}
            multiLine={false}
            name="lastName"
            onChange={[Function]}
            onFocusChange={[Function]}
            onSanitize={[Function]}
            onValidate={[Function]}
            password={false}
            setRef={[Function]}
            type="text"
            validateOnBlur={true}
            value="Doe"
          >
            <SimpleInput
              autoComplete={false}
              autoCorrect={false}
              className="css-keangt"
              disabled={false}
              id="lastName"
              isControlled={false}
              multiLine={false}
              name="lastName"
              onChange={[Function]}
              onFocusChange={[Function]}
              onSanitize={[Function]}
              onValidate={[Function]}
              password={false}
              setRef={[Function]}
              type="text"
              validateOnBlur={true}
              value="Doe"
            >
              <input
                autoComplete="off"
                autoCorrect="off"
                className="css-keangt"
                disabled={false}
                id="lastName"
                name="lastName"
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                type="text"
                value="Doe"
              />
            </SimpleInput>
          </Component>
        </FormElement>
        <Underline
          hasErrorMessage={false}
          isFocused={false}
        >
          <div
            className="css-ycal4l"
          >
            <div
              className="css-1tpmuef"
              style={
                Object {
                  "borderBottomColor": undefined,
                  "transform": "scale3d(0,1,1)",
                }
              }
            />
          </div>
        </Underline>
        <ErrorText
          className=""
          errorText=""
          translate={true}
          validationError={null}
        >
          <div
            className=" css-hmgfge"
          >
            <Translate
              className=""
              params={Object {}}
              string=""
            >
              <span
                className=""
              />
            </Translate>
          </div>
        </ErrorText>
      </div>
    </TextField>
    <TextField
      className=""
      errorText=""
      hintText=""
      isControlled={false}
      label="user.mail"
      multiLine={false}
      name="mail"
      onChange={[Function]}
      onFocusChange={[Function]}
      onSanitize={[Function]}
      onValidate={[Function]}
      password={false}
      setRef={[Function]}
      translateErrorText={true}
      type="text"
      value=""
    >
      <div
        className="css-e4z0u6 "
      >
        <Hint
          hintText=""
          visible={false}
        >
          <div
            className="css-tnfb18 css-1jyyyen"
          >
            <Translate
              className=""
              params={Object {}}
              string=""
            >
              <span
                className=""
              />
            </Translate>
          </div>
        </Hint>
        <Label
          hasErrorMessage={false}
          isFloating={false}
          isFocused={false}
          label="user.mail"
          name="mail"
        >
          <label
            className="css-u7lqu6 css-1fekhao"
            htmlFor="mail"
          >
            <Translate
              className=""
              params={Object {}}
              string="user.mail"
            >
              <span
                className=""
              >
                user.mail
              </span>
            </Translate>
          </label>
        </Label>
        <FormElement
          id="mail"
          isControlled={false}
          multiLine={false}
          name="mail"
          onChange={[Function]}
          onFocusChange={[Function]}
          onSanitize={[Function]}
          onValidate={[Function]}
          password={false}
          setRef={[Function]}
          type="text"
          value=""
        >
          <Component
            className="css-keangt"
            id="mail"
            isControlled={false}
            multiLine={false}
            name="mail"
            onChange={[Function]}
            onFocusChange={[Function]}
            onSanitize={[Function]}
            onValidate={[Function]}
            password={false}
            setRef={[Function]}
            type="text"
            validateOnBlur={true}
            value=""
          >
            <SimpleInput
              autoComplete={false}
              autoCorrect={false}
              className="css-keangt"
              disabled={false}
              id="mail"
              isControlled={false}
              multiLine={false}
              name="mail"
              onChange={[Function]}
              onFocusChange={[Function]}
              onSanitize={[Function]}
              onValidate={[Function]}
              password={false}
              setRef={[Function]}
              type="text"
              validateOnBlur={true}
              value=""
            >
              <input
                autoComplete="off"
                autoCorrect="off"
                className="css-keangt"
                disabled={false}
                id="mail"
                name="mail"
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                type="text"
                value=""
              />
            </SimpleInput>
          </Component>
        </FormElement>
        <Underline
          hasErrorMessage={false}
          isFocused={false}
        >
          <div
            className="css-ycal4l"
          >
            <div
              className="css-1tpmuef"
              style={
                Object {
                  "borderBottomColor": undefined,
                  "transform": "scale3d(0,1,1)",
                }
              }
            />
          </div>
        </Underline>
        <ErrorText
          className=""
          errorText=""
          translate={true}
          validationError={null}
        >
          <div
            className=" css-hmgfge"
          >
            <Translate
              className=""
              params={Object {}}
              string=""
            >
              <span
                className=""
              />
            </Translate>
          </div>
        </ErrorText>
      </div>
    </TextField>
  </Portal>
  <Portal
    name="user.form.after"
    props={null}
  />
</UserForm>
`;

exports[`<UserForm> should render user register form 1`] = `
<UserForm
  disabled={false}
  isRegister={true}
  registerUser={[Function]}
  updateUser={[Function]}
  user={Object {}}
  validateUser={[Function]}
  validationErrors={Object {}}
>
  <Portal
    name="user.form.before"
    props={null}
  />
  <Portal
    name="user.form"
    props={null}
  >
    <TextField
      className=""
      errorText=""
      hintText=""
      isControlled={false}
      label="user.firstName"
      multiLine={false}
      name="firstName"
      onChange={[Function]}
      onFocusChange={[Function]}
      onSanitize={[Function]}
      onValidate={[Function]}
      password={false}
      setRef={[Function]}
      translateErrorText={true}
      type="text"
      value=""
    >
      <div
        className="css-e4z0u6 "
      >
        <Hint
          hintText=""
          visible={false}
        >
          <div
            className="css-tnfb18 css-1jyyyen"
          >
            <Translate
              className=""
              params={Object {}}
              string=""
            >
              <span
                className=""
              />
            </Translate>
          </div>
        </Hint>
        <Label
          hasErrorMessage={false}
          isFloating={false}
          isFocused={false}
          label="user.firstName"
          name="firstName"
        >
          <label
            className="css-u7lqu6 css-1fekhao"
            htmlFor="firstName"
          >
            <Translate
              className=""
              params={Object {}}
              string="user.firstName"
            >
              <span
                className=""
              >
                user.firstName
              </span>
            </Translate>
          </label>
        </Label>
        <FormElement
          id="firstName"
          isControlled={false}
          multiLine={false}
          name="firstName"
          onChange={[Function]}
          onFocusChange={[Function]}
          onSanitize={[Function]}
          onValidate={[Function]}
          password={false}
          setRef={[Function]}
          type="text"
          value=""
        >
          <Component
            className="css-keangt"
            id="firstName"
            isControlled={false}
            multiLine={false}
            name="firstName"
            onChange={[Function]}
            onFocusChange={[Function]}
            onSanitize={[Function]}
            onValidate={[Function]}
            password={false}
            setRef={[Function]}
            type="text"
            validateOnBlur={true}
            value=""
          >
            <SimpleInput
              autoComplete={false}
              autoCorrect={false}
              className="css-keangt"
              disabled={false}
              id="firstName"
              isControlled={false}
              multiLine={false}
              name="firstName"
              onChange={[Function]}
              onFocusChange={[Function]}
              onSanitize={[Function]}
              onValidate={[Function]}
              password={false}
              setRef={[Function]}
              type="text"
              validateOnBlur={true}
              value=""
            >
              <input
                autoComplete="off"
                autoCorrect="off"
                className="css-keangt"
                disabled={false}
                id="firstName"
                name="firstName"
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                type="text"
                value=""
              />
            </SimpleInput>
          </Component>
        </FormElement>
        <Underline
          hasErrorMessage={false}
          isFocused={false}
        >
          <div
            className="css-ycal4l"
          >
            <div
              className="css-1tpmuef"
              style={
                Object {
                  "borderBottomColor": undefined,
                  "transform": "scale3d(0,1,1)",
                }
              }
            />
          </div>
        </Underline>
        <ErrorText
          className=""
          errorText=""
          translate={true}
          validationError={null}
        >
          <div
            className=" css-hmgfge"
          >
            <Translate
              className=""
              params={Object {}}
              string=""
            >
              <span
                className=""
              />
            </Translate>
          </div>
        </ErrorText>
      </div>
    </TextField>
    <TextField
      className=""
      errorText=""
      hintText=""
      isControlled={false}
      label="user.lastName"
      multiLine={false}
      name="lastName"
      onChange={[Function]}
      onFocusChange={[Function]}
      onSanitize={[Function]}
      onValidate={[Function]}
      password={false}
      setRef={[Function]}
      translateErrorText={true}
      type="text"
      value=""
    >
      <div
        className="css-e4z0u6 "
      >
        <Hint
          hintText=""
          visible={false}
        >
          <div
            className="css-tnfb18 css-1jyyyen"
          >
            <Translate
              className=""
              params={Object {}}
              string=""
            >
              <span
                className=""
              />
            </Translate>
          </div>
        </Hint>
        <Label
          hasErrorMessage={false}
          isFloating={false}
          isFocused={false}
          label="user.lastName"
          name="lastName"
        >
          <label
            className="css-u7lqu6 css-1fekhao"
            htmlFor="lastName"
          >
            <Translate
              className=""
              params={Object {}}
              string="user.lastName"
            >
              <span
                className=""
              >
                user.lastName
              </span>
            </Translate>
          </label>
        </Label>
        <FormElement
          id="lastName"
          isControlled={false}
          multiLine={false}
          name="lastName"
          onChange={[Function]}
          onFocusChange={[Function]}
          onSanitize={[Function]}
          onValidate={[Function]}
          password={false}
          setRef={[Function]}
          type="text"
          value=""
        >
          <Component
            className="css-keangt"
            id="lastName"
            isControlled={false}
            multiLine={false}
            name="lastName"
            onChange={[Function]}
            onFocusChange={[Function]}
            onSanitize={[Function]}
            onValidate={[Function]}
            password={false}
            setRef={[Function]}
            type="text"
            validateOnBlur={true}
            value=""
          >
            <SimpleInput
              autoComplete={false}
              autoCorrect={false}
              className="css-keangt"
              disabled={false}
              id="lastName"
              isControlled={false}
              multiLine={false}
              name="lastName"
              onChange={[Function]}
              onFocusChange={[Function]}
              onSanitize={[Function]}
              onValidate={[Function]}
              password={false}
              setRef={[Function]}
              type="text"
              validateOnBlur={true}
              value=""
            >
              <input
                autoComplete="off"
                autoCorrect="off"
                className="css-keangt"
                disabled={false}
                id="lastName"
                name="lastName"
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                type="text"
                value=""
              />
            </SimpleInput>
          </Component>
        </FormElement>
        <Underline
          hasErrorMessage={false}
          isFocused={false}
        >
          <div
            className="css-ycal4l"
          >
            <div
              className="css-1tpmuef"
              style={
                Object {
                  "borderBottomColor": undefined,
                  "transform": "scale3d(0,1,1)",
                }
              }
            />
          </div>
        </Underline>
        <ErrorText
          className=""
          errorText=""
          translate={true}
          validationError={null}
        >
          <div
            className=" css-hmgfge"
          >
            <Translate
              className=""
              params={Object {}}
              string=""
            >
              <span
                className=""
              />
            </Translate>
          </div>
        </ErrorText>
      </div>
    </TextField>
    <TextField
      className=""
      errorText=""
      hintText=""
      isControlled={false}
      label="user.mail"
      multiLine={false}
      name="mail"
      onChange={[Function]}
      onFocusChange={[Function]}
      onSanitize={[Function]}
      onValidate={[Function]}
      password={false}
      setRef={[Function]}
      translateErrorText={true}
      type="text"
      value=""
    >
      <div
        className="css-e4z0u6 "
      >
        <Hint
          hintText=""
          visible={false}
        >
          <div
            className="css-tnfb18 css-1jyyyen"
          >
            <Translate
              className=""
              params={Object {}}
              string=""
            >
              <span
                className=""
              />
            </Translate>
          </div>
        </Hint>
        <Label
          hasErrorMessage={false}
          isFloating={false}
          isFocused={false}
          label="user.mail"
          name="mail"
        >
          <label
            className="css-u7lqu6 css-1fekhao"
            htmlFor="mail"
          >
            <Translate
              className=""
              params={Object {}}
              string="user.mail"
            >
              <span
                className=""
              >
                user.mail
              </span>
            </Translate>
          </label>
        </Label>
        <FormElement
          id="mail"
          isControlled={false}
          multiLine={false}
          name="mail"
          onChange={[Function]}
          onFocusChange={[Function]}
          onSanitize={[Function]}
          onValidate={[Function]}
          password={false}
          setRef={[Function]}
          type="text"
          value=""
        >
          <Component
            className="css-keangt"
            id="mail"
            isControlled={false}
            multiLine={false}
            name="mail"
            onChange={[Function]}
            onFocusChange={[Function]}
            onSanitize={[Function]}
            onValidate={[Function]}
            password={false}
            setRef={[Function]}
            type="text"
            validateOnBlur={true}
            value=""
          >
            <SimpleInput
              autoComplete={false}
              autoCorrect={false}
              className="css-keangt"
              disabled={false}
              id="mail"
              isControlled={false}
              multiLine={false}
              name="mail"
              onChange={[Function]}
              onFocusChange={[Function]}
              onSanitize={[Function]}
              onValidate={[Function]}
              password={false}
              setRef={[Function]}
              type="text"
              validateOnBlur={true}
              value=""
            >
              <input
                autoComplete="off"
                autoCorrect="off"
                className="css-keangt"
                disabled={false}
                id="mail"
                name="mail"
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                type="text"
                value=""
              />
            </SimpleInput>
          </Component>
        </FormElement>
        <Underline
          hasErrorMessage={false}
          isFocused={false}
        >
          <div
            className="css-ycal4l"
          >
            <div
              className="css-1tpmuef"
              style={
                Object {
                  "borderBottomColor": undefined,
                  "transform": "scale3d(0,1,1)",
                }
              }
            />
          </div>
        </Underline>
        <ErrorText
          className=""
          errorText=""
          translate={true}
          validationError={null}
        >
          <div
            className=" css-hmgfge"
          >
            <Translate
              className=""
              params={Object {}}
              string=""
            >
              <span
                className=""
              />
            </Translate>
          </div>
        </ErrorText>
      </div>
    </TextField>
    <TextField
      className=""
      errorText=""
      hintText=""
      isControlled={false}
      label="user.password"
      multiLine={false}
      name="password"
      onChange={[Function]}
      onFocusChange={[Function]}
      onSanitize={[Function]}
      onValidate={[Function]}
      password={false}
      setRef={[Function]}
      translateErrorText={true}
      type="password"
      value=""
    >
      <div
        className="css-e4z0u6 "
      >
        <Hint
          hintText=""
          visible={false}
        >
          <div
            className="css-tnfb18 css-1jyyyen"
          >
            <Translate
              className=""
              params={Object {}}
              string=""
            >
              <span
                className=""
              />
            </Translate>
          </div>
        </Hint>
        <Label
          hasErrorMessage={false}
          isFloating={false}
          isFocused={false}
          label="user.password"
          name="password"
        >
          <label
            className="css-u7lqu6 css-1fekhao"
            htmlFor="password"
          >
            <Translate
              className=""
              params={Object {}}
              string="user.password"
            >
              <span
                className=""
              >
                user.password
              </span>
            </Translate>
          </label>
        </Label>
        <FormElement
          id="password"
          isControlled={false}
          multiLine={false}
          name="password"
          onChange={[Function]}
          onFocusChange={[Function]}
          onSanitize={[Function]}
          onValidate={[Function]}
          password={false}
          setRef={[Function]}
          type="password"
          value=""
        >
          <Component
            className="css-keangt"
            id="password"
            isControlled={false}
            multiLine={false}
            name="password"
            onChange={[Function]}
            onFocusChange={[Function]}
            onSanitize={[Function]}
            onValidate={[Function]}
            password={false}
            setRef={[Function]}
            type="password"
            validateOnBlur={true}
            value=""
          >
            <SimpleInput
              autoComplete={false}
              autoCorrect={false}
              className="css-keangt"
              disabled={false}
              id="password"
              isControlled={false}
              multiLine={false}
              name="password"
              onChange={[Function]}
              onFocusChange={[Function]}
              onSanitize={[Function]}
              onValidate={[Function]}
              password={false}
              setRef={[Function]}
              type="password"
              validateOnBlur={true}
              value=""
            >
              <input
                autoComplete="off"
                autoCorrect="off"
                className="css-keangt"
                disabled={false}
                id="password"
                name="password"
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                type="password"
                value=""
              />
            </SimpleInput>
          </Component>
        </FormElement>
        <Underline
          hasErrorMessage={false}
          isFocused={false}
        >
          <div
            className="css-ycal4l"
          >
            <div
              className="css-1tpmuef"
              style={
                Object {
                  "borderBottomColor": undefined,
                  "transform": "scale3d(0,1,1)",
                }
              }
            />
          </div>
        </Underline>
        <ErrorText
          className=""
          errorText=""
          translate={true}
          validationError={null}
        >
          <div
            className=" css-hmgfge"
          >
            <Translate
              className=""
              params={Object {}}
              string=""
            >
              <span
                className=""
              />
            </Translate>
          </div>
        </ErrorText>
      </div>
    </TextField>
    <div
      className="css-12wp4jo"
      data-test-id="RegisterButton"
    >
      <RippleButton
        className="css-63oe3q"
        disabled={false}
        flat={false}
        onClick={[Function]}
        rippleClassName=""
        rippleSize={null}
        testId="Button"
        type="secondary"
        wrapContent={true}
      >
        <Button
          className="css-63oe3q"
          disabled={false}
          flat={false}
          onClick={[Function]}
          testId="Button"
          type="secondary"
          wrapContent={false}
        >
          <Button
            className="css-187rja2 css-63oe3q"
            disabled={false}
            onClick={[Function]}
            testId="Button"
          >
            <button
              className="css-187rja2 css-63oe3q css-1rn65c0"
              data-test-id="Button"
              disabled={false}
              onClick={[Function]}
            >
              <Ripple
                className="css-8s1fw2 "
                color="#000"
                disabled={false}
                fill={true}
                onComplete={[Function]}
                overflow={false}
                size={null}
              >
                <div
                  aria-hidden={true}
                  className="css-8s1fw2 "
                  data-test-id="Ripple"
                  onClick={[Function]}
                  style={
                    Object {
                      "overflow": "hidden",
                      "position": "relative",
                    }
                  }
                >
                  <Translate
                    className=""
                    params={Object {}}
                    string="register.button"
                  >
                    <span
                      className=""
                    >
                      register.button
                    </span>
                  </Translate>
                </div>
              </Ripple>
            </button>
          </Button>
        </Button>
      </RippleButton>
    </div>
  </Portal>
  <Portal
    name="user.form.after"
    props={null}
  />
</UserForm>
`;
